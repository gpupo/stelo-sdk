#!/usr/bin/env php
<?php

/*
 * This file is part of gpupo/stelo-sdk
 *
 * (c) Gilmar Pupo <g@g1mr.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * For more information, see
 * <http://www.g1mr.com/stelo-sdk/>.
 */

require __DIR__.'/../vendor/autoload.php';

use Gpupo\SteloSdk\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Gpupo\SteloSdk\Factory;

$app = new Application("stelo-sdk");
$app->findConfig([ __DIR__.'/../']);

$transaction_find_parameters = [[
    'key'   => 'transaction_id',
]];

$app->register('transaction:find')
->setDescription('Consulta de transação')
->setDefinition($app->factoryDefinition($transaction_find_parameters))
->setCode(function (InputInterface $input, OutputInterface $output) use ($app, $transaction_find_parameters) {
    $list = $app->processInputParameters($transaction_find_parameters, $input, $output);
    $transaction = $app->factorySdk($list)->factoryManager('transaction')->findById($list['transaction_id']);

    if ($transaction) {
        $output->writeln('<info>Success!</info>');
        $output->writeln($transaction->getStatusCode());
        $output->writeln($transaction->getStatusMessage());
        $output->writeln($transaction->getAmount());
    } else {
        $output->writeln('<error>Not Found</error>');
    }
});

$transaction_create_parameters = [[
    'key'   => 'order_json_file',
]];

$app->register('transaction:create')
->setDescription('Cria uma transação')
->setDefinition($app->factoryDefinition($transaction_create_parameters))
->setCode(function (InputInterface $input, OutputInterface $output) use ($app, $transaction_create_parameters) {
    $list = $app->processInputParameters($transaction_create_parameters, $input, $output);
    $steloSdk = $app->factorySdk($list);
    $data = json_decode(file_get_contents($list['order_json_file']), true);
    $order = $steloSdk->createOrder($data);
    $manager = $steloSdk->factoryManager('transaction');
    $transaction = $manager->createFromOrder($order);

    var_dump($transaction);

});
$app->run();
